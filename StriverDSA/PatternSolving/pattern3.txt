1️⃣5️⃣ pattern

const alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
let maxRow = 5

for(let i=maxRow; i > 0 ; i--){
    let row = ""
    for(let j =0 ; j<i  ; j++){
        row += alpha[j]
    }
    console.log(row)
}

ABCDE
ABCD
ABC
AB
A

-----------------------------------------------------------------------------------------------------------------------------------
1️⃣6️⃣ pattern

const alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
let maxRow = 5

for(let i=0; i < maxRow ; i++){
    let row = ""
    for(let j =0 ; j<=i  ; j++){
        row += alpha[i]
    }
    console.log(row)
}

A
BB
CCC
DDDD
EEEEE

-----------------------------------------------------------------------------------------------------------------------------------
1️⃣7️⃣ pattern

const alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
let n = 5

for(let i=0; i < n ;i++){
    let row = ""
    
    for(let j=0; j<n-1-i; j++){
        row += "-"
    }
    for(let j=0; j<=i ;j++){
        row += alpha[j]
    }
    for(let j = i-1;  j >= 0; j--){
        row += alpha[j]
    }
     for(let j=0; j<n-1-i; j++){
        row += "-"
    }
    console.log(row)
}

----A----
---ABA---
--ABCBA--
-ABCDCBA-
ABCDEDCBA

-----------------------------------------------------------------------------------------------------------------------------------
1️⃣8️⃣ pattern

const alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
let end = 5
let n = 6

for(let i = 0; i < n ; i++){
    let row = " "
    
    for(let j=end-i; j <= end; j++){
        row += alpha[j]
    }
    console.log(row)
}

 F
 EF
 DEF
 CDEF
 BCDEF
 ABCDEF

-----------------------------------------------------------------------------------------------------------------------------------
1️⃣9️⃣ pattern

let n = 5

for(let i = 0; i < n; i++){
    let row = ""
    let space = ""
    
    for(let j = 0; j < n-i; j++){
        row += "*"
    }
    for(let k = 0; k < i*2; k++){
        row += "-"
    }
    for(let m = n-i; m > 0; m--){
        row += "*"
    }
    console.log(row)
}

let z = 5

for (let a = 1; a <= z; a++ ){
    let row = ""
    
    for(let p = 0; p < a; p++){
        row += "*"
    }
    for(let q = z*2-a*2; q > 0; q--){
        row += "-"
    }
    for(let r = 0; r < a; r++){
        row += "*"
    }
    console.log(row)
}

**********
****--****
***----***
**------**
*--------*
*--------*
**------**
***----***
****--****
**********

-----------------------------------------------------------------------------------------------------------------------------------
2️⃣0️⃣ pattern

let maxcol = 10
let maxrow = maxcol-1

for(let i = 1; i <= maxrow; i++){
    let row = ""
    let stars = ""
    let spaces = ""
    
   if( i <= maxcol/2){
       stars = i
   }else{
       stars = maxcol-i
   }
   
   for(let j=0; j < stars; j++){
       row += "*"
   }
   
   spaces = maxcol - stars * 2
   
   for(let k=0; k < spaces; k++){
       row += "-"
   }
   
   for(let m=0; m < stars; m++){
       row += "*"
   }
   console.log(row)
}

*--------*
**------**
***----***
****--****
**********
****--****
***----***
**------**
*--------*

-----------------------------------------------------------------------------------------------------------------------------------
2️⃣1️⃣ pattern

let n = 6

for(let i = 0; i < n; i++){
    let row = ""
    
    for(let j=0; j < n ; j++){
        if( i == 0 ||
            i == n-1 ||
            j == 0 ||
            j == n-1 ){
                row += "*"
            }else{
                row += "-"
            }
           
    }
     console.log(row)
}

******
*----*
*----*
*----*
*----*
******

-----------------------------------------------------------------------------------------------------------------------------------
2️⃣2️⃣ pattern

function printPattern(N){
    let size = 2*N-1
    let pattern = " "
    
    for(let i=0; i < size; i++){
        for(let j=0; j <= size; j++){
            
            let top = i
            let left = j
            let bottom = size-1-i
            let right = size-1-j
            
            let minDistance;
            if(top < bottom){
                minDistance = top;
            }else{
                minDistance = bottom
            }
            
            if(left < minDistance){
                minDistance = left
            }
            
            if(right < minDistance){
                minDistance = right
            }
            
            let value = N - minDistance
            pattern += value + " ";
            }
        pattern += "\n "
    }
    console.log(pattern)
}

printPattern(4)


 4 4 4 4 4 4 4 5 
 4 3 3 3 3 3 4 5 
 4 3 2 2 2 3 4 5 
 4 3 2 1 2 3 4 5 
 4 3 2 2 2 3 4 5 
 4 3 3 3 3 3 4 5 
 4 4 4 4 4 4 4 5 

-----------------------------------------------------------------------------------------------------------------------------------


