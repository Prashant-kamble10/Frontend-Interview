🟢 3. The this Keyword

🧠 3.1 What is this?

        this is a special keyword in JavaScript that refers to the object that is executing the current function.

        🎬 Wasseypur Analogy: Imagine Faizal Khan says, “Main sabka badla loonga!” → Who is “Main”? That depends on who’s speaking.

        Similarly, this refers to the speaker — the current object in context.

        💻 Code: 
            const faizal = {
                 name: "Faizal Khan", 
                 speak() { 
                    console.log(Main hoon ${this.name});
                     } 
                };

        faizal.speak(); // Main hoon Faizal Khan
----------------------------------------------------------------------------------------------------------------------------------------------------------------
🧠 3.2 this in Global vs Function vs Object Context

        this behaves differently based on where it's used:

        1️⃣ Global Context → this refers to the global object (window in browsers)
        2️⃣ Inside an object method → this refers to the object
        3️⃣ Inside a function (non-strict mode) → refers to window/global 
        4️⃣ In strict mode → undefined

        🎬 Analogy:

        Global context: Like a politician shouting "I’m the boss!" on TV — but who exactly?
        Inside object: Faizal in his gang: "Main hoon Faizal Khan" – now it makes sense.
        Standalone function: Confused voice from a loudspeaker — no face to attach.

        💻 Code: 
        
        console.log(this); // In browser: window object

        function shout() { console.log(this); }

        shout(); // global object or undefined in strict mode

        const sardar = { name: "Sardar Khan", declare() { console.log(this.name); } };

        sardar.declare(); // Sardar Khan
----------------------------------------------------------------------------------------------------------------------------------------------------------------
🧠 3.3 Arrow Functions and this

        Arrow functions do NOT have their own this. They use the this of their surrounding (lexical) scope.

        🎬 Analogy: Faizal's little cousin 👶 (arrow function) just repeats what Faizal (parent function) says — doesn't have his own voice.

        💻 Code:
              const faizal = {
                    name: "Faizal Khan", 
                    speak: () => { 
                        console.log(this.name); } 
                        };

        faizal.speak(); // undefined ❌ — because arrow function doesn't have its own this

        ✅ Correct way using regular function: 
                const faizal2 = {
                     name: "Faizal Khan", 
                     speak() { 
                        console.log(this.name); } 
                        };

        faizal2.speak(); // Faizal Khan
----------------------------------------------------------------------------------------------------------------------------------------------------------------

🧠 3.4 this in Classes and Event Handlers

    In classes, this refers to the instance (the object created using new).
     In event handlers, it can refer to the element that triggered the event.

        🎬 Analogy:

        Class: Definite was created as a gang member object → this refers to that gang member.

        Event: You clicked on a katta (button), and the button says "Bang!" — it’s this in action.

        💻 Class Example: 
            class GangMember { 
                constructor(name) { 
                    this.name = name;
                     }

                attack() { 
                    console.log(${this.name} attacks from the shadows 🔫); 
                    } }

        const definite = new GangMember("Definite Khan"); 
        definite.attack();                   // Definite Khan attacks from the shadows 🔫

        💻 Event Handler Example (Browser): 
                
                <button id="trigger">Shoot</button>

   
            <script>
            document.getElementById("trigger").addEventListener("click", function () { 
                console.log(this); 
                // this refers to the button element 
                this.innerText = "Bang 💥"; }
                );
            </script>
----------------------------------------------------------------------------------------------------------------------------------------------------------------